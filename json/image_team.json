{
  "provider": "autogen_agentchat.teams.RoundRobinGroupChat",
  "component_type": "team",
  "version": 1,
  "component_version": 1,
  "description": "RAG",
  "label": "RAG_17491",
  "config": {
    "participants": [
      {
        "provider": "autogen_agentchat.agents.AssistantAgent",
        "component_type": "agent",
        "version": 1,
        "component_version": 1,
        "description": "一個能夠為大家工作的工具人代理。",
        "label": "工具人專家",
        "config": {
          "name": "assistant_agent",
          "model_client": {
            "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
            "component_type": "model",
            "version": 1,
            "component_version": 1,
            "description": "gemini",
            "label": "gemini",
            "config": {
              "model": "gemini-2.0-flash",
              "api_key": "AIzaSyC7bQrehwcofwkCoWZzmoVN-wc_jaYw67Q"
            }
          },
          "tools": [
            {
              "provider": "autogen_core.tools.FunctionTool",
              "component_type": "tool",
              "version": 1,
              "component_version": 1,
              "description": "用來生圖",
              "label": "Replicate生圖小工具",
              "config": {
                "source_code": "# 設置日誌\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\nlogger = logging.getLogger(__name__)\n\n# 創建 MCP 服務\nmcp = FastMCP(\"Flux 圖片生成服務\")\n\n@mcp.tool()\nasync def generate_flux_image(\n    prompt: str,\n    count: int = 1,\n    format: str = \"png\",\n    quality: int = 100,\n    aspect_ratio: str = \"1:1\",\n    model: str = \"flux-dev\"\n) -> str:\n    \"\"\"\n    生成圖片的工具\n\n    Args:\n        prompt (str): 圖片生成的提示詞\n        count (int): 生成數量，預設 1\n        format (str): 圖片格式，預設 png\n        quality (int): 圖片品質，預設 100\n        aspect_ratio (str): 長寬比，預設 1:1\n        model (str): 模型名稱，預設 flux-dev\n\n    Returns:\n        str: Markdown 格式的圖片連結\n    \"\"\"\n    logger.info(f\"開始生成圖片，提示詞：{prompt}\")\n    logger.info(f\"參數設置 - 數量：{count}, 格式：{format}, 品質：{quality}, 比例：{aspect_ratio}, 模型：{model}\")\n\n    url = os.getenv(\"FLUX_IMAGE_WEBHOOK_URL\")\n    if not url:\n        return \"錯誤：未設置 FLUX_IMAGE_WEBHOOK_URL\"\n\n    # 型別保證\n    if aspect_ratio is not None and not isinstance(aspect_ratio, str):\n        aspect_ratio = str(aspect_ratio)\n    if format is not None and not isinstance(format, str):\n        format = str(format)\n    if quality is not None and not isinstance(quality, int):\n        try:\n            quality = int(quality)\n        except Exception:\n            return \"錯誤：quality 參數無法轉為 int\"\n    if model is not None and not isinstance(model, str):\n        model = str(model)\n\n    # 組裝 payload\n    payload = {\n        \"prompt\": prompt,\n        \"count\": count,\n        \"format\": format,\n        \"quality\": quality,\n        \"aspect_ratio\": aspect_ratio,\n        \"model\": model,\n    }\n    payload = {k: v for k, v in payload.items() if v is not None}\n    logger.info(f\"Webhook payload: {payload}\")\n\n    try:\n        async with httpx.AsyncClient() as client:\n            response = await client.post(url, json=payload, timeout=60)\n            if response.status_code != 200:\n                return f\"API 請求錯誤：狀態碼 {response.status_code}\"\n\n            data = response.json()\n            image_links = data.get(\"image_urls\") or data.get(\"圖片連結\", \"[]\")\n            # image_links 可能是字串型態的 JSON 陣列\n            if isinstance(image_links, str):\n                try:\n                    image_objs = json.loads(image_links)\n                except Exception:\n                    image_objs = []\n            else:\n                image_objs = image_links\n\n            # image_objs 可能是 [{'url': ...}] 或直接是 url 字串陣列\n            image_urls = []\n            if isinstance(image_objs, list):\n                for item in image_objs:\n                    if isinstance(item, dict) and \"url\" in item:\n                        image_urls.append(item[\"url\"])\n                    elif isinstance(item, str):\n                        image_urls.append(item)\n\n            if not image_urls:\n                return \"錯誤：API 返回空回應\"\n\n            image_url = image_urls[0]\n            if not image_url.startswith(('http://', 'https://')):\n                logger.error(f'無效的圖片 URL: {image_url}')\n                return \"錯誤：收到無效的圖片 URL\"\n\n            logger.info(f\"成功獲取圖片 URL：{image_url}\")\n\n            # 返回 Markdown 格式的圖片\n            return f\"\"\"\n### 生成的圖片\n\n![Generated Image]({image_url})\n\n[點擊查看原圖]({image_url})\n\"\"\"\n    except httpx.TimeoutException as e:\n        logger.error(f'請求超時: {e}')\n        return \"錯誤：請求超時，請稍後再試\"\n    except httpx.RequestError as e:\n        logger.error(f'API 請求錯誤: {e}')\n        return f\"API 請求錯誤：{str(e)}\"\n    except Exception as e:\n        logger.error(f'發生未知錯誤: {e}')\n        return f\"發生錯誤：{str(e)}\"\n\n@mcp.tool()\ndef get_flux_service_info() -> str:\n    \"\"\"獲取 Flux 圖片生成服務的基本信息\"\"\"\n    return \"\"\"\n【Flux 圖片生成服務】\n\n此服務提供以下功能：\n1. 基於文字提示生成圖片\n2. 支持自定義生成數量、格式、品質、長寬比、模型名稱\n\n參數說明：\n- prompt: 圖片生成的提示詞（必填）\n- count: 生成數量（可選，預設 1）\n- format: 圖片格式（可選，預設 png）\n- quality: 圖片品質（可選，預設 100）\n- aspect_ratio: 長寬比（可選，預設 1:1）\n- model: 模型名稱（可選，預設 flux-dev）\n\n使用 generate_flux_image 工具生成圖片\n使用 get_flux_service_info 工具獲取服務信息\n\"\"\"",
                "name": "FLUX_IMAGE_TOOL",
                "description": "A simple calculator that performs basic arithmetic operations",
                "global_imports": [
                  "os",
                  "httpx",
                  "logging",
                  {
                    "module": "mcp.server",
                    "imports": [
                      "FastMCP"
                    ]
                  },
                  {
                    "module": "typing",
                    "imports": [
                      "Union"
                    ]
                  }
                ],
                "has_cancellation_support": false
              }
            }
          ],
          "handoffs": [],
          "model_context": {
            "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
            "component_type": "chat_completion_context",
            "version": 1,
            "component_version": 1,
            "description": "An unbounded chat completion context that keeps a view of the all the messages.",
            "label": "UnboundedChatCompletionContext",
            "config": {}
          },
          "description": "An agent that provides assistance with ability to use tools.",
          "system_message": "你是一個樂於助人的助手。謹慎地解決任務。 \n1. 當使用者有生成圖片的需求，請直接調用FLUX_IMAGE_TOOL生圖工具，並生成 1 張 png 格式、畫質為 100、比例為 1:1 、模型為flux-dev的圖片\n2. 當使用者有查詢天氣的需求，請將使用者的輸入城市名稱先進行中翻英再調用WEATHER_SEARCH_TOOL天氣查詢工具。\n3. 當使用者查詢一般資訊時，請優先調用N8N_SEARCH_TOOL工具查找知識庫，若在知識庫裡面找不到才調用exa工具。\n完成後，請說 TERMINATE.",
          "model_client_stream": false,
          "reflect_on_tool_use": false,
          "tool_call_summary_format": "{result}"
        }
      }
    ],
    "termination_condition": {
      "provider": "autogen_agentchat.base.OrTerminationCondition",
      "component_type": "termination",
      "version": 1,
      "component_version": 1,
      "label": "OrTerminationCondition",
      "config": {
        "conditions": [
          {
            "provider": "autogen_agentchat.conditions.TextMentionTermination",
            "component_type": "termination",
            "version": 1,
            "component_version": 1,
            "description": "Terminate the conversation if a specific text is mentioned.",
            "label": "TextMentionTermination",
            "config": {
              "text": "TERMINATE"
            }
          },
          {
            "provider": "autogen_agentchat.conditions.MaxMessageTermination",
            "component_type": "termination",
            "version": 1,
            "component_version": 1,
            "description": "Terminate the conversation after a maximum number of messages have been exchanged.",
            "label": "MaxMessageTermination",
            "config": {
              "max_messages": 10,
              "include_agent_event": false
            }
          }
        ]
      }
    }
  }
}